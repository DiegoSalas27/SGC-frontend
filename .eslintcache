[{"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/index.js":"1","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/App.js":"2","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/reportWebVitals.js":"3","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/context/SocketContext.js":"4","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/utils/setJWT.js":"5","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/login/Login.js":"6","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/DashBoard.js":"7","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/hooks/useSocket.js":"8","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/axios.js":"9","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/CollectionPoints/CollectionPoints.js":"10","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/AdminStart/AdminStart.js":"11","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Users/Users.js":"12","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Trucks/Trucks.js":"13","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Map/Map.js":"14","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/NavBar/NavBar.js":"15","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/SideBar/SideBar.js":"16","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/common/Input/Input.js":"17","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Map/MapConfig.js":"18","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/CollectionPoints/CollectionPoint/CollectionPoint.js":"19","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Users/User/User.js":"20","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Trucks/Truck/Truck.js":"21","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/Modal.js":"22","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/utils/constants.js":"23","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Backdrop/Backdrop.js":"24","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/TruckForm/TruckForm.js":"25","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/UserForm/UserForm.js":"26","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/CollectionPointForm/CollectionPointForm.js":"27","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/common/Select/Select.js":"28","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/EntryPointForm/EntryPointForm.js":"29"},{"size":625,"mtime":1611420328000,"results":"30","hashOfConfig":"31"},{"size":1375,"mtime":1611440814000,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610574200000,"results":"33","hashOfConfig":"31"},{"size":457,"mtime":1619142034713,"results":"34","hashOfConfig":"31"},{"size":256,"mtime":1611424992000,"results":"35","hashOfConfig":"31"},{"size":2680,"mtime":1611438070000,"results":"36","hashOfConfig":"31"},{"size":5519,"mtime":1619151957114,"results":"37","hashOfConfig":"31"},{"size":861,"mtime":1611420270000,"results":"38","hashOfConfig":"31"},{"size":189,"mtime":1619142034714,"results":"39","hashOfConfig":"31"},{"size":1756,"mtime":1617762328000,"results":"40","hashOfConfig":"31"},{"size":346,"mtime":1610649886000,"results":"41","hashOfConfig":"31"},{"size":1589,"mtime":1610733686000,"results":"42","hashOfConfig":"31"},{"size":1511,"mtime":1610731040000,"results":"43","hashOfConfig":"31"},{"size":3933,"mtime":1619236238508,"results":"44","hashOfConfig":"31"},{"size":3865,"mtime":1619151613301,"results":"45","hashOfConfig":"31"},{"size":1978,"mtime":1619151644586,"results":"46","hashOfConfig":"31"},{"size":397,"mtime":1617762088000,"results":"47","hashOfConfig":"31"},{"size":6341,"mtime":1618776550862,"results":"48","hashOfConfig":"31"},{"size":1487,"mtime":1617763502000,"results":"49","hashOfConfig":"31"},{"size":1697,"mtime":1610733686000,"results":"50","hashOfConfig":"31"},{"size":1749,"mtime":1617762210000,"results":"51","hashOfConfig":"31"},{"size":8118,"mtime":1619150394934,"results":"52","hashOfConfig":"31"},{"size":246,"mtime":1610732772000,"results":"53","hashOfConfig":"31"},{"size":209,"mtime":1610654754000,"results":"54","hashOfConfig":"31"},{"size":4949,"mtime":1617835580000,"results":"55","hashOfConfig":"31"},{"size":6902,"mtime":1617835294000,"results":"56","hashOfConfig":"31"},{"size":5393,"mtime":1619403046532,"results":"57","hashOfConfig":"31"},{"size":397,"mtime":1617766424000,"results":"58","hashOfConfig":"31"},{"size":2086,"mtime":1619149259025,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kgnot2",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/index.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/App.js",["128"],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport setJWT from \"./utils/setJWT\";\nimport jwt_decode from 'jwt-decode';\nimport './App.css';\nimport DashBoard from \"./pages/Dashboard/DashBoard\";\nimport Login from './pages/login/Login';\n\nconst jwt = localStorage.jwtToken\n\nif (jwt) {\n  setJWT(jwt)\n  const decode_jwt = jwt_decode(jwt);\n  const currentTime = Date.now()/1000;\n\n  if(decode_jwt.exp < currentTime) {\n    setJWT(false);\n    localStorage.removeItem(\"jwtToken\");\n    window.location.replace(\"/\");\n  }\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(null);\n\n  useEffect(() => {\n    if (localStorage.jwtToken) {\n      const decoded = jwt_decode(localStorage.jwtToken);\n      setLoggedIn(decoded);\n    } else {\n      setLoggedIn(null);\n    }\n  }, [setLoggedIn]);\n\n  function renderRoutes() {\n    let routes = (\n      <Switch>\n        <Route exact path=\"/\" component={() => <Login setLoggedIn={setLoggedIn}/>} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n    if (loggedIn) {\n      routes = (\n        <Switch>\n          <Route path=\"/main\" component={DashBoard} />\n          <Redirect to=\"/main\" />\n        </Switch>\n      );\n    }\n\n    return routes;\n  }\n\n  return (\n    <Router>\n        { renderRoutes() }\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/reportWebVitals.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/context/SocketContext.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/utils/setJWT.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/login/Login.js",["129"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Formik, Form } from 'formik';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from '../../axios';\r\nimport * as Yup from 'yup';\r\nimport logo from '../../assets/img/logo512.png';\r\nimport CustomTextInput from '../../components/common/Input/Input';\r\nimport setJWT from '../../utils/setJWT';\r\nconst Login = ({ setLoggedIn }) => {\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  async function submitHandler ({username, password}, setSubmitting, resetForm) {\r\n    const user = {\r\n      username,\r\n      password, \r\n      \"confirmPassword\": password\r\n    }\r\n    try {\r\n      const loggedIn = await axios.post('/users/login', user);\r\n\r\n\r\n      const { token } = loggedIn.data;\r\n\r\n      localStorage.setItem(\"jwtToken\", token);\r\n\r\n      setJWT(token); // set token in header\r\n      \r\n      console.log(loggedIn);\r\n      resetForm();\r\n      setSubmitting(false);\r\n      setError(null);\r\n      setLoggedIn(token);\r\n      history.push('/main');\r\n    } catch (err) {\r\n      setSubmitting(false);\r\n      setError(err.response.data.error);\r\n      console.log(err.response.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"section-container center h-500\">\r\n        <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: '',\r\n          }}\r\n          validationSchema={Yup.object({\r\n            username: Yup.string()\r\n            .required('Este campo es obligatorio'),\r\n            password: Yup.string()\r\n            .min(6, 'El contraseña debe contener al menos 6 caracteres')\r\n            .required('Este campo es obligatorio')\r\n          })}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            submitHandler(values, setSubmitting, resetForm);\r\n          }}\r\n        >\r\n          {props => (\r\n            <Form className=\"authForm\">\r\n              <CustomTextInput name=\"username\" type=\"text\" placeholder=\"Ingrese usuario\" />\r\n              <CustomTextInput name=\"password\" type=\"password\" placeholder=\"Ingrese contraseña\" />\r\n              { error && (\r\n                <div className=\"error mt-3\">{error}</div>\r\n              )}\r\n              <div className=\"bottom-panel\">\r\n                <p className=\"link-text\">Olvidé mi contraseña</p>\r\n                <button type=\"submit\">{props.isSubmitting ? 'Cargando...' : 'Ingresar'}</button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <div className='logoBar'>\r\n        <img src={logo} alt=\"\" width=\"150\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/DashBoard.js",["130","131"],"import { useLocation, useHistory } from \"react-router\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { SocketContext } from \"../../context/SocketContext\";\r\nimport SideBar from \"../../components/SideBar/SideBar\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport AdminStart from \"./AdminStart/AdminStart\";\r\nimport CollectionPoints from \"./CollectionPoints/CollectionPoints\";\r\nimport Trucks from \"./Trucks/Trucks\";\r\nimport Users from \"./Users/Users\";\r\nimport Map from \"./Map/Map\";\r\nimport \"./DashBoard.css\";\r\nimport setJWT from \"../../utils/setJWT\";\r\n\r\nconst options = {\r\n  enableHighAccuracy: false,\r\n  timeout: 1000,\r\n  maximumAge: 0,\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [entityArrayDelete, setEntityArrayDelete] = useState([]);\r\n  const [operationResponse, setOperationResponse] = useState(null);\r\n  const [editEntity, setEditEntity] = useState(null);\r\n  const [route, setRoute] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [initialLode, setInitialLoad] = useState(null);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  useEffect(() => {}, [location]);\r\n\r\n  useEffect(() => {\r\n    setUser(jwt_decode(localStorage.getItem(\"jwtToken\")));\r\n    setInitialLoad(true);\r\n  }, []);\r\n\r\n  // Crear un marcador al estar conectado como conductor\r\n  useEffect(() => {\r\n    if (user && user.rol_id === 2) {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          const driverMarker = {\r\n            nombre: user.nombre_usuario,\r\n            latitud: position.coords.latitude,\r\n            longitud: position.coords.longitude,\r\n            id: user.id,\r\n          };\r\n          socket.emit(\"marcador-nuevo\", driverMarker);\r\n        });\r\n        setInterval(() => {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            const driverMarker = {\r\n              nombre: user.nombre_usuario,\r\n              latitud: position.coords.latitude,\r\n              longitud: position.coords.longitude,\r\n              id: user.id,\r\n            };\r\n            console.log(position.coords.latitude, position.coords.longitude);\r\n            socket.emit(\"marcador-actualizado\", driverMarker);\r\n          });\r\n        }, 1000);\r\n        // navigator.geolocation.watchPosition(success, error, options);\r\n      }\r\n    } else {\r\n      if (initialLode) {\r\n        const { id, rol_id } = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n        if (rol_id === 2) {\r\n          socket.emit(\"marcador-eliminar\", id);\r\n          localStorage.removeItem(\"jwtToken\");\r\n          setTimeout(() => {\r\n            window.location.replace(\"/\");\r\n          }, 500);\r\n        }\r\n      } else if (!initialLode && user) {\r\n        localStorage.removeItem(\"jwtToken\");\r\n        window.location.replace(\"/\");\r\n      }\r\n    }\r\n    return () => {\r\n      socket.off(\"marcador-nuevo\");\r\n      socket.off(\"marcador-eliminar\");\r\n    };\r\n  }, [socket, user, initialLode]);\r\n\r\n  function logout() {\r\n    setJWT(false);\r\n    if (user.rol_id === 1) {\r\n      setInitialLoad(false);\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }\r\n\r\n  // function success(position) {\r\n  //   console.log(position.coords.latitude, position.coords.longitude);\r\n  //   const driverMarker = {\r\n  //     nombre: user.nombre_usuario,\r\n  //     latitud: position.coords.latitude,\r\n  //     longitud: position.coords.longitude,\r\n  //     id: user.id\r\n  //   }\r\n  //   socket.emit('marcador-actualizado', driverMarker);\r\n  // };\r\n\r\n  // function error(err) {\r\n  //   console.warn('ERROR(' + err.code + '): ' + err.message);\r\n  // };\r\n\r\n  function renderPanel() {\r\n    // eslint-disable-next-line default-case\r\n    switch (location.pathname) {\r\n      case \"/main\":\r\n        return <AdminStart />;\r\n      case \"/main/user\":\r\n        return (\r\n          <Users\r\n            entityArrayDelete={entityArrayDelete}\r\n            setEntityArrayDelete={setEntityArrayDelete}\r\n            operationResponse={operationResponse}\r\n            setEditEntity={setEditEntity}\r\n          />\r\n        );\r\n      case \"/main/collectionPoint\":\r\n        return (\r\n          <CollectionPoints\r\n            entityArrayDelete={entityArrayDelete}\r\n            setEntityArrayDelete={setEntityArrayDelete}\r\n            operationResponse={operationResponse}\r\n            setEditEntity={setEditEntity}\r\n          />\r\n        );\r\n      case \"/main/truck\":\r\n        return (\r\n          <Trucks\r\n            entityArrayDelete={entityArrayDelete}\r\n            setEntityArrayDelete={setEntityArrayDelete}\r\n            operationResponse={operationResponse}\r\n            setEditEntity={setEditEntity}\r\n          />\r\n        );\r\n      case \"/main/map\":\r\n        return <Map showRoute={route} user={user} />;\r\n      case \"/main/dashboard\":\r\n        return <AdminStart />;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <SideBar userRol={user && user.rol_id} userLogout={logout} />\r\n      <NavBar\r\n        userName={user ? user.nombre_usuario : \"\"}\r\n        userRole={user && user.rol_id}\r\n        entityArrayDelete={entityArrayDelete}\r\n        setEntityArrayDelete={setEntityArrayDelete}\r\n        setOperationResponse={setOperationResponse}\r\n        editEntity={editEntity}\r\n        setEditEntity={setEditEntity}\r\n        setRoute={setRoute}\r\n      />\r\n      <div className=\"main-panel\">{renderPanel()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/hooks/useSocket.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/axios.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/CollectionPoints/CollectionPoints.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/AdminStart/AdminStart.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Users/Users.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Trucks/Trucks.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Map/Map.js",["132","133","134","135"],"import { useContext, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { CustomMap } from \"./MapConfig\";\r\nimport axios from \"../../../axios\";\r\nimport \"./Map.css\";\r\nimport { SocketContext } from \"../../../context/SocketContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst puntoInicial = {\r\n  lng: 5,\r\n  lat: 34,\r\n  zoom: 2,\r\n};\r\n\r\nconst Map = ({ showRoute, user }) => {\r\n  const [map, setMap] = useState(null);\r\n  const { socket } = useContext(SocketContext);\r\n\r\n  useEffect(() => {\r\n    setMap(new CustomMap(\"map\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    map && initMarkers();\r\n  }, [map, showRoute]);\r\n\r\n  // Escuchar como fiscalizador conductores activos\r\n  useEffect(() => {\r\n    if (map && showRoute) {\r\n      socket.emit(\"marcadores-activos\", {});\r\n      socket.on(\"marcadores-activos\", (marcadores) => {\r\n        for (const key of Object.keys(marcadores)) {\r\n          map.addMarker(marcadores[key], \"truck\", key);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off(\"marcadores-activos\");\r\n    };\r\n  }, [socket, showRoute]);\r\n\r\n  // Escuchar como fiscalizador nuevos de conductores que se conectan\r\n  useEffect(() => {\r\n    const decoded = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n    if (decoded.rol_id === 1 && showRoute) {\r\n      socket.on(\"marcador-nuevo\", (marcador) => {\r\n        if (map) {\r\n          map.addMarker(marcador, \"truck\", marcador.id);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off(\"marcador-nuevo\");\r\n    };\r\n  }, [socket, showRoute, map]);\r\n\r\n  // Mover marcador mediante sockets\r\n  useEffect(() => {\r\n    const decoded = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n    if (decoded.rol_id === 1 && showRoute) {\r\n      socket.on(\"marcador-actualizado\", (marcador) => {\r\n        if (map) {\r\n          map.updateMarker(marcador, marcador.id);\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off(\"marcador-actualizado\");\r\n    };\r\n  }, [socket, showRoute, map]);\r\n\r\n  // Escuchar como fiscalizador conductores que se desconectan\r\n  useEffect(() => {\r\n    if (map && showRoute) {\r\n      socket.on(\"marcador-eliminar\", (id) => {\r\n        map.deleteMarker(id);\r\n      });\r\n    }\r\n    return () => {\r\n      socket.off(\"marcador-eliminar\");\r\n    };\r\n  }, [socket, showRoute]);\r\n\r\n  async function initMarkers() {\r\n    let responseTrash;\r\n    try {\r\n      responseTrash = await axios.get(\"collectionPoints/all\");\r\n      responseTrash.data.forEach((entity) => {\r\n        map.addMarker(entity, \"trash\", entity.id);\r\n      });\r\n      // map.addSelfMarker();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    if (showRoute) {\r\n      const responseTrucks = await axios.get(\"/trucks/getAllDrivers\");\r\n\r\n      const json_locations = responseTrash.data.map((trash) => {\r\n        return {\r\n          id: trash.id,\r\n          demand: trash.capacidad_actual,\r\n          lat: trash.latitud,\r\n          lng: trash.longitud,\r\n        };\r\n      });\r\n\r\n      const json_drivers = responseTrucks.data.map((driver) => {\r\n        return {\r\n          id: driver.id,\r\n          license_plate: driver.placa,\r\n          driver: driver.driver,\r\n          capacity: driver.capacidad - driver.capacidad_actual,\r\n          lat: driver.lat,\r\n          lng: driver.lng,\r\n        };\r\n      });\r\n\r\n      console.log(\"YO ENVIO\", json_drivers);\r\n      console.log(\"TACHOS\", json_locations);\r\n\r\n      const response = await axios.post(\"/collectionPoints/optimize\", {\r\n        json_locations: JSON.stringify(json_locations),\r\n        json_drivers: JSON.stringify(json_drivers),\r\n      });\r\n\r\n      console.log(response);\r\n\r\n      if (user && user.rol_id === 2) {\r\n        response.data.response.trucks = response.data.response.trucks.filter(\r\n          (truck) => truck.id === user.id\r\n        );\r\n      }\r\n\r\n      map.showTruckRoutes(response.data.response.trucks);\r\n    }\r\n  }\r\n\r\n  return <div id=\"map\" className=\"map\"></div>;\r\n};\r\n\r\nexport default Map;\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/NavBar/NavBar.js",["136","137","138"],"import { useLocation } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport user from \"../../assets/img/user.png\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = ({\r\n  userName,\r\n  userRole,\r\n  entityArrayDelete,\r\n  setEntityArrayDelete,\r\n  setOperationResponse,\r\n  editEntity,\r\n  setEditEntity,\r\n  setRoute,\r\n}) => {\r\n  const [sectionTitle, setSectionTitle] = useState(\r\n    userRole === 2 ? \"Inicio Conductor\" : \"Inicio Administrador\"\r\n  );\r\n  const [showCrudButtons, setShowCrudButtons] = useState(false);\r\n  const [showWatchRoute, setWatchRoute] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [operation, setOperation] = useState(\"create\");\r\n  const [option, setOption] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setNavBarTitle();\r\n  }, [location]);\r\n\r\n  function setNavBarTitle() {\r\n    setEntityArrayDelete([]);\r\n    setRoute(false);\r\n    setWatchRoute(false);\r\n    switch (location.pathname) {\r\n      case \"/main\": {\r\n        setSectionTitle(\r\n          userRole === 2 ? \"Inicio Conductor\" : \"Inicio Administrador\"\r\n        );\r\n        setShowCrudButtons(false);\r\n        break;\r\n      }\r\n      case \"/main/user\": {\r\n        setSectionTitle(\"Lista de usuario\");\r\n        setShowCrudButtons(true);\r\n        setOption(\"/users\");\r\n        break;\r\n      }\r\n      case \"/main/collectionPoint\": {\r\n        setSectionTitle(\"Lista puntos de acopio\");\r\n        setShowCrudButtons(true);\r\n        setOption(\"/collectionPoints\");\r\n        break;\r\n      }\r\n      case \"/main/truck\": {\r\n        setSectionTitle(\"Lista de camiones\");\r\n        setShowCrudButtons(true);\r\n        setOption(\"/trucks\");\r\n        break;\r\n      }\r\n      case \"/main/map\": {\r\n        setSectionTitle(\"Recorrido en tiempo real\");\r\n        setShowCrudButtons(false);\r\n        setWatchRoute(true);\r\n        break;\r\n      }\r\n      case \"/main/dashboard\": {\r\n        setSectionTitle(\"Dashboard principal\");\r\n        setShowCrudButtons(false);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function setModal(operation) {\r\n    setOperation(operation);\r\n    setShowModal(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <ul>\r\n        <li>\r\n          <p>{sectionTitle}</p>\r\n          <span className=\"subtitle\">Bienvenido {userName}</span>\r\n        </li>\r\n        {showCrudButtons && (\r\n          <div className=\"navButtons\">\r\n            <button\r\n              onClick={() => {\r\n                setEditEntity(null);\r\n                setModal(\"create\");\r\n              }}\r\n            >\r\n              Agregar\r\n            </button>\r\n            <button onClick={() => setModal(\"delete\")}>Eliminar</button>\r\n            {location.pathname === \"/main/collectionPoint\" && (\r\n              <button\r\n                onClick={() => {\r\n                  setEditEntity(null);\r\n                  setModal(\"entryPoint\");\r\n                }}\r\n              >\r\n                Punto de partida\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        {showWatchRoute && (\r\n          <div className=\"navButtons\">\r\n            <button onClick={() => setRoute(true)}>Ver recorrido</button>\r\n          </div>\r\n        )}\r\n        <li>\r\n          <img src={user} /> &nbsp;&nbsp;&nbsp;\r\n          <span className=\"subtitle\">{userName}</span>\r\n        </li>\r\n      </ul>\r\n      <Modal\r\n        show={showModal}\r\n        operation={operation}\r\n        setOperation={setOperation}\r\n        option={option}\r\n        entityArrayDelete={entityArrayDelete}\r\n        setEntityArrayDelete={setEntityArrayDelete}\r\n        setOperationResponse={setOperationResponse}\r\n        editEntity={editEntity}\r\n        modalClose={() => {\r\n          setEditEntity(null);\r\n          setShowModal(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/SideBar/SideBar.js",["139","140","141","142","143","144","145"],"import { Link } from \"react-router-dom\";\r\nimport user from \"../../assets/img/user.png\";\r\nimport collectionPoint from \"../../assets/img/puntoAcopio.png\";\r\nimport truck from \"../../assets/img/truck.png\";\r\nimport map from \"../../assets/img/map.png\";\r\nimport dashboard from \"../../assets/img/dashboard.png\";\r\nimport logout from \"../../assets/img/logout.ico\";\r\nimport logo from \"../../assets/img/logo512.png\";\r\nimport \"./SideBar.css\";\r\nimport setJWT from \"../../utils/setJWT\";\r\n\r\nconst SideBar = ({ userLogout, userRol }) => {\r\n  return (\r\n    <div className=\"sidebard-container\">\r\n      <ul>\r\n        <Link className=\"nav-link\" to=\"/main\">\r\n          <img\r\n            src={logo}\r\n            alt=\"\"\r\n            width=\"120\"\r\n            style={{ marginTop: \"-24px\", marginBottom: \"20px\" }}\r\n          />\r\n        </Link>\r\n        {userRol && userRol === 1 && (\r\n          <>\r\n            <Link className=\"nav-link\" to=\"/main/user\">\r\n              <li>\r\n                <img src={user} width=\"40\" /> Usuario\r\n              </li>\r\n            </Link>\r\n\r\n            <Link className=\"nav-link\" to=\"/main/collectionPoint\">\r\n              <li>\r\n                <img src={collectionPoint} width=\"40\" /> Punto de acopio\r\n              </li>\r\n            </Link>\r\n\r\n            <Link className=\"nav-link\" to=\"/main/truck\">\r\n              <li>\r\n                <img src={truck} width=\"40\" /> Camión recolector\r\n              </li>\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/main/dashboard\">\r\n              <li>\r\n                <img src={dashboard} width=\"40\" /> Dashboard\r\n              </li>\r\n            </Link>\r\n          </>\r\n        )}\r\n        <Link className=\"nav-link\" to=\"/main/map\">\r\n          <li>\r\n            <img src={map} width=\"40\" /> Ver mapa\r\n          </li>\r\n        </Link>\r\n        <li onClick={userLogout}>\r\n          <img src={logout} width=\"40\" /> Cerrar sesión\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/common/Input/Input.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Map/MapConfig.js",["146"],"import collectionPoint from \"../../../assets/img/trash-s-icon.svg\";\r\nimport user from \"../../../assets/img/user-s-icon.svg\";\r\nimport truck from \"../../../assets/img/truck-s-icon.svg\";\r\nimport axios from \"axios\";\r\n\r\nexport class CustomMap {\r\n  constructor(divId) {\r\n    this.googleMap = new window.google.maps.Map(\r\n      document.getElementById(divId),\r\n      {\r\n        zoom: 12,\r\n        center: {\r\n          lat: -12.122587,\r\n          lng: -76.992705,\r\n        },\r\n      }\r\n    );\r\n    this.markers = {};\r\n  }\r\n\r\n  addSelfMarker() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const marker = new window.google.maps.Marker({\r\n          map: this.googleMap,\r\n          position: {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          },\r\n          icon: user,\r\n        });\r\n\r\n        marker.addListener(\"click\", () => {\r\n          const inforWindow = new window.google.maps.InfoWindow({\r\n            content: \"Este eres tú\",\r\n          });\r\n\r\n          inforWindow.open(this.googleMap, marker);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMarker(mappable, id) {\r\n    console.log(mappable.latitud, mappable.longitud);\r\n    const position = new window.google.maps.LatLng(\r\n      mappable.latitud,\r\n      mappable.longitud\r\n    );\r\n    this.markers[id.toString() + \"truck\"] &&\r\n      this.markers[id.toString() + \"truck\"].setPosition(position);\r\n  }\r\n\r\n  deleteMarker(id) {\r\n    this.markers[id.toString() + \"truck\"].setMap(null);\r\n    delete this.markers[id.toString() + truck];\r\n  }\r\n\r\n  addMarker(mappable, entityName, id) {\r\n    // can pass any argument that satisfies de Mappable interface defined\r\n    const marker = new window.google.maps.Marker({\r\n      map: this.googleMap,\r\n      position: {\r\n        lat: mappable.latitud,\r\n        lng: mappable.longitud,\r\n      },\r\n      icon: entityName === \"trash\" ? collectionPoint : truck,\r\n    });\r\n\r\n    marker.id = id;\r\n\r\n    this.markers[marker.id.toString() + entityName] = marker;\r\n\r\n    marker.addListener(\"click\", () => {\r\n      const inforWindow = new window.google.maps.InfoWindow({\r\n        content: mappable.nombre,\r\n      });\r\n\r\n      inforWindow.open(this.googleMap, marker);\r\n    });\r\n  }\r\n\r\n  async showTruckRoutes(trucks) {\r\n    // send tracks currently in the database with their ids, license_plate, driver, capacity and current garbashe volume\r\n    // send trash currently in the database with their ids, capacity and current garbashe volume, coordinates\r\n\r\n    // backend returns trucks with the following data:\r\n    // id, distance, license_plate, driver, route(matrix)\r\n\r\n    // const trucks = [\r\n    //   {\r\n    //     id: 1,\r\n    //     distance: \"100\",\r\n    //     license_plate: \"KJKAD1\",\r\n    //     driver: \"Pedro Salinas\",\r\n    //     route: [\r\n    //       [-77.013743, -12.177352][(-77.00831, -12.170845)], // lng, lat\r\n    //       [-77.007002, -12.172308],\r\n    //       [-77.005851, -12.171445],\r\n    //       [-77.005054, -12.172625],\r\n    //     ],\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     distance: \"200\",\r\n    //     license_plate: \"1A0AS0\",\r\n    //     driver: \"Juan Dominguez\",\r\n    //     route: [\r\n    //       [-77.013892, -12.176537],\r\n    //       [-77.014595, -12.175761],\r\n    //       [-77.01496, -12.176097],\r\n    //       [-77.013384, -12.177706],\r\n    //     ],\r\n    //   },\r\n    // ];\r\n\r\n    var colors = [];\r\n\r\n    trucks.forEach((_) => {\r\n      colors.push(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\r\n    });\r\n\r\n    var infowindow = new window.google.maps.InfoWindow();\r\n\r\n    // process the loaded GeoJSON data.\r\n    var bounds = new window.google.maps.LatLngBounds();\r\n\r\n    let map = this.googleMap.data.map;\r\n\r\n    if (map) {\r\n      window.google.maps.event.addListener(\r\n        map.data,\r\n        \"addfeature\",\r\n        function (e) {\r\n          if (e.feature.getGeometry().getType() === \"MultiLineString\") {\r\n            var polys = e.feature.getGeometry().getArray();\r\n            for (var i = 0; i < polys.length; i++) {\r\n              for (var j = 0; j < polys[i].getLength(); j++) {\r\n                var poly = new window.google.maps.Polyline({\r\n                  map: this.map,\r\n                  path: polys[i].getArray(),\r\n                  strokeColor: colors[i % colors.length],\r\n                });\r\n                window.google.maps.event.addListener(\r\n                  poly,\r\n                  \"click\",\r\n                  (function (poly, i, feature) {\r\n                    return function () {\r\n                      infowindow.setContent(\r\n                        feature.getProperty(\"Distance\" + i) +\r\n                          \"<br>\" +\r\n                          feature.getProperty(\"Camion\" + i) +\r\n                          \"<br>\" +\r\n                          feature.getProperty(\"Conductor\" + i)\r\n                      );\r\n                      infowindow && infowindow.setPosition(polys[i].getAt(0));\r\n                      infowindow.open(this.map);\r\n                    };\r\n                  })(poly, i, e.feature)\r\n                );\r\n                bounds.extend(polys[i].getAt(j));\r\n              }\r\n            }\r\n            this.map.fitBounds(bounds);\r\n            this.map.data.setMap(null);\r\n          }\r\n        }\r\n      );\r\n\r\n      const properties = {};\r\n      const coordinates = [];\r\n\r\n      for (const [index, truck] of trucks.entries()) {\r\n        properties[`Distance${index}`] = \"Distancia: \" + truck.distance + \"km\";\r\n        properties[`Camion${index}`] = \"Placa: \" + truck.license_plate;\r\n        properties[`Conductor${index}`] = \"Conductor: \" + truck.driver;\r\n        for (const route of truck.route.entries()) {\r\n          route[0] = parseFloat(route[0]);\r\n          route[1] = parseFloat(route[1]);\r\n        }\r\n        coordinates.push(truck.route);\r\n      }\r\n\r\n      var jsonData = {\r\n        type: \"FeatureCollection\",\r\n        features: [\r\n          {\r\n            type: \"Feature\",\r\n            properties: properties,\r\n            geometry: {\r\n              type: \"MultiLineString\",\r\n              coordinates, // each matrix represents a truck route\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.googleMap.data.addGeoJson(jsonData);\r\n      window.google.maps.event.addDomListener(window, \"load\");\r\n    }\r\n  }\r\n}\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/CollectionPoints/CollectionPoint/CollectionPoint.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Users/User/User.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/pages/Dashboard/Trucks/Truck/Truck.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/Modal.js",["147"],"import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport axios from \"../../axios\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport CollectionForm from \"./forms/CollectionPointForm/CollectionPointForm\";\r\nimport TruckForm from \"./forms/TruckForm/TruckForm\";\r\nimport UserForm from \"./forms/UserForm/UserForm\";\r\nimport EntryPointForm from \"./forms/EntryPointForm/EntryPointForm\";\r\n\r\nconst Modal = ({\r\n  show,\r\n  modalClose,\r\n  option,\r\n  operation,\r\n  setOperation,\r\n  entityArrayDelete,\r\n  setEntityArrayDelete,\r\n  setOperationResponse,\r\n  editEntity,\r\n}) => {\r\n  const [mTitle, setModalTitle] = useState();\r\n  const [error, setError] = useState(null);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    modalTitle();\r\n  }, [location, option, operation, editEntity]);\r\n\r\n  function modalTitle() {\r\n    // eslint-disable-next-line default-case\r\n    switch (location.pathname) {\r\n      case \"/main/user\": {\r\n        if (editEntity !== null) {\r\n          operation !== \"edit\" && setOperation(\"edit\");\r\n          setModalTitle(\"Editar usuario\");\r\n          break;\r\n        } else {\r\n          if (operation === \"create\") {\r\n            setModalTitle(\"Registrar usuario\");\r\n            break;\r\n          } else if (operation === \"delete\") {\r\n            setModalTitle(\"Eliminar usuario\");\r\n            break;\r\n          } else {\r\n            setModalTitle(\"Editar usuario\");\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      case \"/main/collectionPoint\": {\r\n        if (editEntity !== null) {\r\n          operation !== \"edit\" && setOperation(\"edit\");\r\n          setModalTitle(\"Editar punto de acopio\");\r\n          break;\r\n        } else {\r\n          if (operation === \"create\") {\r\n            setModalTitle(\"Registrar punto de acopio\");\r\n            break;\r\n          } else if (operation === \"delete\") {\r\n            setModalTitle(\"Eliminar punto de acopio\");\r\n            break;\r\n          } else if (operation === \"entryPoint\") {\r\n            setModalTitle(\"Ingresar punto de partida\");\r\n            break;\r\n          } else {\r\n            setModalTitle(\"Editar punto de acopio\");\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      case \"/main/truck\": {\r\n        if (editEntity !== null) {\r\n          operation !== \"edit\" && setOperation(\"edit\");\r\n          setModalTitle(\"Editar camión recolector\");\r\n          break;\r\n        } else {\r\n          if (operation === \"create\") {\r\n            setModalTitle(\"Registrar camión recolector\");\r\n            break;\r\n          } else if (operation === \"delete\") {\r\n            setModalTitle(\"Eliminar camión recolector\");\r\n            break;\r\n          } else {\r\n            setModalTitle(\"Editar camión recolector\");\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderForm() {\r\n    // eslint-disable-next-line default-case\r\n    switch (location.pathname) {\r\n      case \"/main/user\": {\r\n        if (editEntity !== null) {\r\n          return (\r\n            <UserForm\r\n              option={option}\r\n              modalClose={modalClose}\r\n              setOperationResponse={setOperationResponse}\r\n              editEntity={editEntity}\r\n            />\r\n          );\r\n        } else {\r\n          if (operation === \"create\") {\r\n            return (\r\n              <UserForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                show={show}\r\n              />\r\n            );\r\n          } else if (operation === \"delete\") {\r\n            return deleteForm(\"Usuarios\");\r\n          } else {\r\n            return (\r\n              <UserForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                editEntity={editEntity}\r\n              />\r\n            );\r\n          }\r\n        }\r\n      }\r\n      case \"/main/collectionPoint\": {\r\n        if (editEntity !== null) {\r\n          return (\r\n            <CollectionForm\r\n              option={option}\r\n              modalClose={modalClose}\r\n              setOperationResponse={setOperationResponse}\r\n              editEntity={editEntity}\r\n            />\r\n          );\r\n        } else {\r\n          if (operation === \"create\") {\r\n            return (\r\n              <CollectionForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                show={show}\r\n              />\r\n            );\r\n          } else if (operation === \"delete\") {\r\n            return deleteForm(\"Puntos de acopio\");\r\n          } else if (operation === \"entryPoint\") {\r\n            return (\r\n              <EntryPointForm\r\n                modalClose={modalClose}\r\n                show={show}\r\n                setOperation={setOperation}\r\n              />\r\n            );\r\n          } else {\r\n            return (\r\n              <CollectionForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                editEntity={editEntity}\r\n              />\r\n            );\r\n          }\r\n        }\r\n      }\r\n      case \"/main/truck\": {\r\n        if (editEntity !== null) {\r\n          return (\r\n            <TruckForm\r\n              option={option}\r\n              modalClose={modalClose}\r\n              setOperationResponse={setOperationResponse}\r\n              editEntity={editEntity}\r\n            />\r\n          );\r\n        } else {\r\n          if (operation === \"create\") {\r\n            return (\r\n              <TruckForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                show={show}\r\n              />\r\n            );\r\n          } else if (operation === \"delete\") {\r\n            return deleteForm(\"Camiónes recolectores\");\r\n          } else {\r\n            return (\r\n              <TruckForm\r\n                option={option}\r\n                modalClose={modalClose}\r\n                setOperationResponse={setOperationResponse}\r\n                editEntity={editEntity}\r\n              />\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteForm(entityName) {\r\n    return (\r\n      <>\r\n        <div className=\"deleteFormTitle\">\r\n          {entityArrayDelete.length > 0 ? (\r\n            <p>¿Estás seguro de eliminar los {entityName} seleccionados?</p>\r\n          ) : (\r\n            <p>No ha seleecionado {entityName}</p>\r\n          )}\r\n        </div>\r\n        {error && <div className=\"error mt-3\">{error}</div>}\r\n        <div className=\"modalFooter\">\r\n          {entityArrayDelete.length > 0 ? (\r\n            <>\r\n              <button onClick={deleteEntities}> Confirmar </button>\r\n              <button onClick={modalClose}> Cancelar</button>\r\n            </>\r\n          ) : (\r\n            <button onClick={modalClose}> Cerrar </button>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async function deleteEntities() {\r\n    try {\r\n      let response;\r\n      entityArrayDelete.map(async (id, index) => {\r\n        response = await axios.delete(`${option}/${id}`);\r\n        console.log(response);\r\n        if (index === entityArrayDelete.length - 1) {\r\n          setError(null);\r\n          setOperationResponse(response);\r\n          setEntityArrayDelete([]);\r\n          modalClose();\r\n        }\r\n      });\r\n    } catch (err) {\r\n      setError(err.response.data.error);\r\n      console.log(err.response.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop show={show || editEntity} clicked={modalClose} />\r\n      <div\r\n        className=\"modal\"\r\n        style={{\r\n          transform:\r\n            show || editEntity ? \"translateY(-70px)\" : \"translateY(-100vh)\",\r\n          opacity: show || editEntity ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        <div className=\"modalHeader\">\r\n          <h3>{mTitle}</h3>\r\n        </div>\r\n        <div className=\"modal-content\">{renderForm()}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/utils/constants.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Backdrop/Backdrop.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/TruckForm/TruckForm.js",["148"],"import { useState, useEffect } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport axios from '../../../../axios';\r\nimport * as Yup from 'yup';\r\nimport CustomTextInput from '../../../common/Input/Input';\r\nimport './TruckForm.css';\r\n\r\nconst TruckForm = ({ option, modalClose, setOperationResponse, editEntity, show }) => {\r\n  const [error, setError] = useState(null);\r\n  const [radio, setRadio] = useState('1')\r\n  const [entity, setEntity] = useState(null);\r\n  const [fetched, setFeched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    editEntity && !fetched &&  getEntityById();\r\n    return () => {\r\n      setFeched(false);\r\n      entity && setEntity(null);\r\n    }\r\n  }, [editEntity, entity, show]);\r\n\r\n  async function getEntityById() {\r\n    const reponse = await axios.get(`${option}/${editEntity}`);\r\n    setFeched(true);\r\n    setEntity(reponse.data);\r\n    setRadio(reponse.data.tipo_combustible.toString());\r\n  }\r\n\r\n  async function submitHandler (values, setSubmitting, resetForm) {\r\n    let entity = { ...values }\r\n    entity = { ...entity, tipo_combustible: radio}\r\n    let response;\r\n    try {\r\n      if (editEntity) {\r\n        response = await axios.put(`${option}/${editEntity}`, entity);\r\n      } else {\r\n        response = await axios.post(option, entity);\r\n      }\r\n\r\n      console.log(response);\r\n      resetForm();\r\n      setSubmitting(false);\r\n      setError(null);\r\n      setOperationResponse(response);\r\n      modalClose();\r\n    } catch (err) {\r\n      setSubmitting(false);\r\n      setError(err.response.data);\r\n      console.log(err.response.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={{\r\n        placa: entity ? entity.placa : '',\r\n        capacidad: entity ? entity.capacidad : '',\r\n        capacidad_actual: entity ? entity.capacidad_actual : '',\r\n        consumo: entity ? entity.consumo : '',\r\n        marca: entity ? entity.marca : '',\r\n        modelo: entity ? entity.modelo : '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        placa: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        capacidad: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        consumo: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        marca: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        modelo: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        submitHandler(values, setSubmitting, resetForm);\r\n      }}\r\n    >\r\n      {props => (\r\n        <Form className=\"modalForm\">\r\n          <div style={{marginLeft: \"-25px\" }} >\r\n            <CustomTextInput name=\"placa\" type=\"text\" placeholder=\"Placa\" />\r\n            { error && error.placa && (\r\n              <div className=\"error mt-3\">{error.placa}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex-input\">\r\n            <CustomTextInput name=\"capacidad\" type=\"number\" placeholder=\"Capacidad\" /><span>m<sup>3</sup></span> \r\n            <CustomTextInput name=\"consumo\" type=\"number\" placeholder=\"Consumo\" /> <span>Galones</span> \r\n          </div>\r\n          <div className=\"flex-input\">\r\n            <CustomTextInput disable=\"true\" name=\"capacidad_actual\" type=\"number\" placeholder=\"0\" /><span>m<sup>3</sup></span> \r\n          </div>\r\n          <div className=\"flex-input\">\r\n            <div className=\"button-stack\">\r\n              <div>\r\n                <input \r\n                  type=\"radio\" \r\n                  name=\"radio\"\r\n                  value=\"1\"\r\n                  checked={radio === \"1\"} \r\n                  onChange={(e) => setRadio(e.target.value)} /> Gasolina 98\r\n              </div>\r\n              <div>\r\n                <input \r\n                  type=\"radio\" \r\n                  name=\"radio\"\r\n                  value=\"2\"\r\n                  checked={radio === \"2\"} \r\n                  onChange={(e) => setRadio(e.target.value)} /> Petróleo\r\n              </div>\r\n              <div>\r\n                <input \r\n                  type=\"radio\" \r\n                  name=\"radio\"\r\n                  value=\"3\"\r\n                  checked={radio === \"3\"} \r\n                  onChange={(e) => setRadio(e.target.value)} /> Diesel 82\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-input col\">\r\n              <CustomTextInput name=\"marca\" type=\"text\" placeholder=\"Marca\" />\r\n              <CustomTextInput name=\"modelo\" type=\"text\" placeholder=\"Modelo\" />\r\n            </div>\r\n          </div>\r\n          {/* { error && (\r\n            <div className=\"error mt-3\">{error}</div>\r\n          )} */}\r\n          <div className=\"modalFooter\">\r\n            <button type=\"submit\"> {props.isSubmitting ? 'Creando...' : 'Confimar'} </button>\r\n            <button type=\"button\" onClick={modalClose}> Cancelar</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default TruckForm;","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/UserForm/UserForm.js",["149","150","151"],"import { useState, useEffect } from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport axios from '../../../../axios';\r\nimport * as Yup from 'yup';\r\nimport CustomTextInput from '../../../common/Input/Input';\r\nimport CustomSelect from '../../../common/Select/Select';\r\nimport './UserForm.css';\r\nimport Trucks from './../../../../pages/Dashboard/Trucks/Trucks';\r\n\r\nconst UserForm = ({ option, modalClose, setOperationResponse, editEntity, show }) => {\r\n  const [error, setError] = useState(null);\r\n  const [entity, setEntity] = useState(null);\r\n  const [fetched, setFeched] = useState(false);\r\n  const [roles, setRoles] = useState(null);\r\n  const [trucks, setTrucks] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchRoles();\r\n    fetchTrucks(editEntity);\r\n    return () => {\r\n      setFeched(false);\r\n      entity && setEntity(null);\r\n    }\r\n  }, [editEntity, entity, show]);\r\n\r\n  async function fetchRoles() {\r\n    try {\r\n      const response = await axios.get('roles/all');\r\n      setRoles(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.response.data.error);\r\n    }\r\n  }\r\n\r\n  async function fetchTrucks(editEntity) {\r\n    try {\r\n      const response = await axios.get('trucks/all', {\r\n        params: {\r\n          available: true\r\n        }\r\n      });\r\n      setTrucks(response.data);\r\n      editEntity && !fetched &&  getEntityById();\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.response.data.error);\r\n    }\r\n  }\r\n\r\n  async function getEntityById() {\r\n    try {\r\n      const reponse = await axios.get(`${option}/${editEntity}`);\r\n      setFeched(true);\r\n      setEntity(reponse.data);\r\n      setTimeout(() => {\r\n        setTrucks(trucks => [...trucks, { placa: reponse.data.camion_id}]);\r\n      }, 100)\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError(err.response.data.error);\r\n    }\r\n  }\r\n\r\n  async function submitHandler (values, setSubmitting, resetForm) {\r\n    const rol_id = values.rol_id == 'Fiscalizador'? values.rol_id = 1 : values.rol_id = 2;\r\n    const camion_id = trucks.find(truck => truck.placa === values.camion_id).id;\r\n    let entity = { ...values, rol_id, camion_id: camion_id }\r\n    let response;\r\n    try {\r\n      if (editEntity) {\r\n        response = await axios.put(`${option}/${editEntity}`, entity);\r\n      } else {\r\n        response = await axios.post(`${option}/register`, entity);\r\n      }\r\n\r\n      console.log(response);\r\n      resetForm();\r\n      setSubmitting(false);\r\n      setError(null);\r\n      setOperationResponse(response);\r\n      modalClose();\r\n    } catch (err) {\r\n      setSubmitting(false);\r\n      setError(err.response.data);\r\n      console.log(err.response.data);\r\n    }\r\n  }\r\n\r\n  console.log(trucks);\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={{\r\n        nombre_usuario: entity ? entity.nombre_usuario ? entity.nombre_usuario : '' : '',\r\n        nombre: entity ? entity.nombre ? entity.nombre : '':  '',\r\n        apellido: entity ? entity.apellido ? entity.apellido : '' : '',\r\n        dni: entity ? entity.dni ? entity.dni : '' : '',\r\n        fecha_nacimiento: entity ? ( entity.fecha_nacimiento ? entity.fecha_nacimiento.substr(0, 10) : '' ) : '',\r\n        licencia_de_conducir: entity ? entity.licencia_de_conducir ? entity.licencia_de_conducir : '' : '',\r\n        contrasena: '',\r\n        rol_id: entity ? entity.rol_id === 1 ? 'Fiscalizador' : 'Conductor' : '',\r\n        camion_id: entity ? entity.camion_id  : ''\r\n      }}\r\n      validationSchema={Yup.object({\r\n        nombre_usuario: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        nombre: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        apellido: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        dni: Yup.string()\r\n        .min(8, 'El dni debe contener 8 números')\r\n        .max(8, 'El dni debe contener 8 números')\r\n        .required('Este campo es obligatorio'),\r\n        fecha_nacimiento: Yup.string()\r\n        .required('Este campo es obligatorio'),\r\n        rol_id: Yup.string()\r\n        .oneOf(roles ? roles.map(rol => rol.nombre) : [], 'Debe seleccionar un rol'),\r\n        camion_id: Yup.string()\r\n        .oneOf(trucks ? trucks.map(truck => truck.placa) : [], 'Debe seleccionar un camión')\r\n      })}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        submitHandler(values, setSubmitting, resetForm);\r\n      }}\r\n    >\r\n      {props => (\r\n        <Form className=\"modalForm\">\r\n          <div style={{marginLeft: \"-25px\" }} >\r\n            <CustomTextInput name=\"nombre_usuario\" type=\"text\" placeholder=\"Nombre de usuario\" />\r\n            <CustomTextInput name=\"nombre\" type=\"text\" placeholder=\"Nombres\" />\r\n            <CustomTextInput name=\"apellido\" type=\"text\" placeholder=\"Apellidos\" />\r\n          </div>\r\n          <div className=\"flex-input\">\r\n            <CustomTextInput name=\"dni\" type=\"number\" placeholder=\"DNI\" />\r\n            <CustomTextInput name=\"fecha_nacimiento\" type=\"date\" /> <span>Fecha de nacimiento</span>\r\n          </div>\r\n          <div style={{marginLeft: \"-25px\" }} >\r\n            <div style={{marginLeft: \"30px\"}}>\r\n              <CustomSelect label=\"camion_id\" name=\"camion_id\">\r\n                <option value=\"\">Seleccionar camión</option>\r\n                {trucks && (\r\n                  trucks.map(truck => {\r\n                    return <option key={truck.placa} value={truck.placa}>{truck.placa}</option>\r\n                  })\r\n                )}\r\n              </CustomSelect>\r\n            </div>\r\n            <CustomTextInput name=\"licencia_de_conducir\" type=\"text\" placeholder=\"Licencia de conducir\" />\r\n            {error && error.licencia_de_conducir && (\r\n                  <div className=\"error mt-3\">{error.licencia_de_conducir}</div>\r\n                )}\r\n            <div style={{marginLeft: \"30px\"}}>\r\n              <CustomSelect label=\"rol_id\" name=\"rol_id\">\r\n                <option value=\"\">Seleccionar rol</option>\r\n                {roles && (\r\n                  roles.map(rol => {\r\n                    return <option key={rol.nombre} value={rol.nombre}>{rol.nombre}</option>\r\n                  })\r\n                )}\r\n              </CustomSelect>\r\n              { error && error.rol_id && (\r\n                <div className=\"error mt-3\">{error.rol_id}</div>\r\n              )}\r\n            </div>\r\n            <CustomTextInput name=\"contrasena\" type=\"password\" placeholder=\"Contraseña\" />\r\n            {error && error.contrasena && (\r\n              <div className=\"error mt-3\">{error.contrasena}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"modalFooter\">\r\n            <button type=\"submit\"> {props.isSubmitting ? 'Creando...' : 'Confimar'} </button>\r\n            <button type=\"button\" onClick={modalClose}> Cancelar</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default UserForm;","/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/CollectionPointForm/CollectionPointForm.js",["152"],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/common/Select/Select.js",[],"/Users/diegosalas/Smart Garbage Collector/Smart-Garbage-Collection/client/src/components/Modal/forms/EntryPointForm/EntryPointForm.js",[],{"ruleId":"153","severity":1,"message":"154","line":5,"column":3,"nodeType":"155","messageId":"156","endLine":5,"endColumn":7},{"ruleId":"153","severity":1,"message":"157","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":18},{"ruleId":"153","severity":1,"message":"158","line":15,"column":7,"nodeType":"155","messageId":"156","endLine":15,"endColumn":14},{"ruleId":"153","severity":1,"message":"159","line":29,"column":9,"nodeType":"155","messageId":"156","endLine":29,"endColumn":16},{"ruleId":"153","severity":1,"message":"160","line":9,"column":7,"nodeType":"155","messageId":"156","endLine":9,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":25,"column":6,"nodeType":"163","endLine":25,"endColumn":22,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":40,"column":6,"nodeType":"163","endLine":40,"endColumn":25,"suggestions":"166"},{"ruleId":"161","severity":1,"message":"165","line":82,"column":6,"nodeType":"163","endLine":82,"endColumn":25,"suggestions":"167"},{"ruleId":"161","severity":1,"message":"168","line":29,"column":6,"nodeType":"163","endLine":29,"endColumn":16,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":35,"column":5,"nodeType":"172","messageId":"173","endLine":72,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":116,"column":11,"nodeType":"176","endLine":116,"endColumn":29},{"ruleId":"153","severity":1,"message":"177","line":10,"column":8,"nodeType":"155","messageId":"156","endLine":10,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":28,"column":17,"nodeType":"176","endLine":28,"endColumn":46},{"ruleId":"174","severity":1,"message":"175","line":34,"column":17,"nodeType":"176","endLine":34,"endColumn":57},{"ruleId":"174","severity":1,"message":"175","line":40,"column":17,"nodeType":"176","endLine":40,"endColumn":47},{"ruleId":"174","severity":1,"message":"175","line":45,"column":17,"nodeType":"176","endLine":45,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":52,"column":13,"nodeType":"176","endLine":52,"endColumn":41},{"ruleId":"174","severity":1,"message":"175","line":56,"column":11,"nodeType":"176","endLine":56,"endColumn":42},{"ruleId":"153","severity":1,"message":"178","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":13},{"ruleId":"161","severity":1,"message":"179","line":28,"column":6,"nodeType":"163","endLine":28,"endColumn":47,"suggestions":"180"},{"ruleId":"161","severity":1,"message":"181","line":20,"column":6,"nodeType":"163","endLine":20,"endColumn":32,"suggestions":"182"},{"ruleId":"153","severity":1,"message":"183","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":14},{"ruleId":"161","severity":1,"message":"184","line":24,"column":6,"nodeType":"163","endLine":24,"endColumn":32,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":67,"column":34,"nodeType":"188","messageId":"189","endLine":67,"endColumn":36},{"ruleId":"161","severity":1,"message":"181","line":26,"column":6,"nodeType":"163","endLine":26,"endColumn":32,"suggestions":"190"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'options' is assigned a value but never used.","'history' is assigned a value but never used.","'puntoInicial' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initMarkers'. Either include it or remove the dependency array.","ArrayExpression",["191"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["192"],["193"],"React Hook useEffect has a missing dependency: 'setNavBarTitle'. Either include it or remove the dependency array.",["194"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setJWT' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'modalTitle'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'fetched' and 'getEntityById'. Either include them or remove the dependency array.",["196"],"'Trucks' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTrucks'. Either include it or remove the dependency array.",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["198"],{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"208","fix":"212"},"Update the dependencies array to be: [initMarkers, map, showRoute]",{"range":"213","text":"214"},"Update the dependencies array to be: [socket, showRoute, map]",{"range":"215","text":"216"},{"range":"217","text":"216"},"Update the dependencies array to be: [location, setNavBarTitle]",{"range":"218","text":"219"},"Update the dependencies array to be: [location, option, operation, editEntity, modalTitle]",{"range":"220","text":"221"},"Update the dependencies array to be: [editEntity, entity, fetched, getEntityById, show]",{"range":"222","text":"223"},"Update the dependencies array to be: [editEntity, entity, fetchTrucks, show]",{"range":"224","text":"225"},{"range":"226","text":"223"},[607,623],"[initMarkers, map, showRoute]",[1049,1068],"[socket, showRoute, map]",[2257,2276],[866,876],"[location, setNavBarTitle]",[803,844],"[location, option, operation, editEntity, modalTitle]",[680,706],"[editEntity, entity, fetched, getEntityById, show]",[853,879],"[editEntity, entity, fetchTrucks, show]",[701,727]]